name: Benchmark Influx Stack

on:
  push:
    branches: [ "influx-proxy" ]
  pull_request:
    branches: [ "influx-proxy" ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Print Public IP
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
          echo ${{ steps.ip.outputs.ipv6 }}

      - uses: actions/checkout@v3

      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build
      
      - name: Run pre-req setup script
        run: |
          ./setup.sh
          mkdir ${{ github.run_id }}
          cp ./stats.yml ./${{ github.run_id }}/stats.yml
          wget https://kevinaird.github.io/simple-stats/build/reports/list.csv
          echo ${{ github.run_id }},${GITHUB_REF##*/} run ${{ github.run_id }} >> list.csv
          
      #- name: Run Simple Stats
      #  run: docker run --name simple-stats -d -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd)/stats.yml:/app/stats.yml -v $(pwd)/${{ github.run_id }}:/output --network influx-loadtest_default kevinaird/simple-stats:1670708361 start /app/stats.yml

      - name: Run Monitoring Stack
        run: |
          export SIMPLE_STATS_OUTPUT=$(pwd)/${{ github.run_id }}
          docker-compose -f "monitoring/docker-compose.yml" up -d
          docker ps --all

      - name: Run JMeter
        run: docker run --name jmeter -i -v $(pwd):/app -w /app --network influx-loadtest_default justb4/jmeter -n -t /app/loadTest.jmx -l /app/${{ github.run_id }}/loadTest.jtl
        
      - name: Generate JMeter Report from JTL
        run: |
          ls -l ./${{ github.run_id }}
          docker run --name jmeter-report -i -v $(pwd):/app -w /app justb4/jmeter -g /app/${{ github.run_id }}/loadTest.jtl -o /app/${{ github.run_id }}/loadTest
          rm ./${{ github.run_id }}/loadTest.jtl
        
      - name: Dump Logs to Files
        if: always()
        run: ./cleanup.sh ${{ github.run_id }}

      - name: Push Results 
        if: always()
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: '${{ github.run_id }}'
          destination_repo: 'kevinaird/kevinaird.github.io'
          destination_folder: 'simple-stats/build/reports'
          user_email: 'kevinaird@gmail.com'
          user_name: 'kevinaird'
          commit_message: 'Pushing results to simple stats react app for viewing'

      - name: Push List.csv 
        if: always()
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'list.csv'
          destination_repo: 'kevinaird/kevinaird.github.io'
          destination_folder: 'simple-stats/build/reports'
          user_email: 'kevinaird@gmail.com'
          user_name: 'kevinaird'
          commit_message: 'Pushing updated list.csv'
        
